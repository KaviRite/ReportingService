name: Deploy to EC2 ðŸš€

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    name: Build, Push Docker Image, and Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.REPOSITORY }}

      - name: Build Docker Image
        run: docker build -t reporting-service-api .

      - name: Tag and Push Docker Image
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          docker tag reporting-service-api:latest ${{ secrets.REPOSITORY }}:$IMAGE_TAG
          docker tag reporting-service-api:latest ${{ secrets.REPOSITORY }}:latest
          docker push ${{ secrets.REPOSITORY }}:$IMAGE_TAG
          docker push ${{ secrets.REPOSITORY }}:latest

      - name: Deploy to EC2
        run: |
          IMAGE_TAG=$(git rev-parse --short HEAD)
          ssh -i ~/.ssh/your-key.pem ec2-user@<your-ec2-public-ip> << EOF
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.REPOSITORY }}
            docker pull ${{ secrets.REPOSITORY }}:$IMAGE_TAG
            docker stop reporting-service-api || true
            docker rm reporting-service-api || true
            docker run -d --name reporting-service-api -p 80:80 ${{ secrets.REPOSITORY }}:$IMAGE_TAG
          EOF
